const r="http://localhost:5002/api",a=async t=>{const o=await fetch(`${r}/customers`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!o.ok){const e=await o.json();throw new Error(e.error||"Failed to add customer.")}return o.json()},i=async(t,o)=>{const e=new FormData;e.append("profilePicture",o);const n=await fetch(`${r}/customers/${t}/profile-picture`,{method:"POST",body:e});if(!n.ok)throw new Error("Failed to upload profile picture.");return await n.json()},c=async t=>{try{const o=await fetch(`${r}/customers/${t}`);if(!o.ok)throw new Error("Failed to fetch customer.");return await o.json()}catch(o){return console.error("Error fetching customer:",o),null}},p=async(t,o,e)=>{const n=await fetch(`${r}/customers/CustomerCounts?month=${t}&year=${o}`,{headers:{Authorization:`Bearer ${e}`}});if(!n.ok)throw new Error("Failed to fetch customer counts.");return n.json()},h=async(t,o,e)=>{const n=await fetch(`${r}/customers/WeeklyCustomerCounts?week=${t}&year=${o}`,{headers:{Authorization:`Bearer ${e}`}});if(!n.ok)throw new Error("Failed to fetch weekly customer counts.");return n.json()},u=async()=>{try{const t=await fetch(`${r}/customers`);if(!t.ok)throw new Error("Failed to fetch customers.");return await t.json()}catch(t){return console.error("Error fetching customers:",t),[]}},f=async()=>{try{const t=await fetch(`${r}/appointments/upcoming`);if(!t.ok)throw new Error("Failed to fetch upcoming appointments.");return await t.json()}catch(t){return console.error("Error fetching upcoming appointments:",t),[]}},w=async(t=1,o=100)=>{try{const e=await fetch(`${r}/appointments/past?page=${t}&limit=${o}`);if(!e.ok)throw new Error("Failed to fetch past appointments.");return await e.json()}catch(e){return console.error("Error fetching past appointments:",e),{appointments:[]}}},m=async(t,o)=>{try{const e=await fetch(`${r}/appointments/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!e.ok){const s=await e.json();throw console.error("❌ Error Response from API:",s),new Error(s.message||"Failed to update the appointment.")}const n=await e.json();return console.log("✅ API Response - Updated Appointment:",n),n}catch(e){throw console.error("❌ Error updating appointment:",e.message),e}};async function d(){const t=await fetch(`${r}/waitingList`);if(!t.ok){const o=await t.json();throw new Error(o.error||"Failed to fetch the waiting list.")}return t.json()}async function l(t){const o=await fetch(`${r}/waitingList`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({customerId:t})});if(!o.ok){const e=await o.json();throw new Error(e.error||"Failed to add to waiting list.")}return o.json()}async function y(t){const o=await fetch(`${r}/waitingList/${t}`,{method:"DELETE"});if(!o.ok){const e=await o.json();throw new Error(e.error||"Failed to remove from waiting list.")}return o.json()}async function g(t,o){console.log("Updating note for ID:",t,"Note:",o);const e=await fetch(`${r}/waitingList/${t}/note`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!e.ok){const n=await e.json();throw console.error("Failed to update note:",n),new Error(n.error||"Failed to update note")}return e.json()}async function $(){const t=await fetch(`${r}/sms-statuses`);if(!t.ok)throw new Error("Failed to fetch SMS statuses");return t.json()}const j=async t=>{const o=await fetch(`${r}/auth/signin`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!o.ok)throw new Error("Failed to login.");return o.json()},E=async t=>{const o=await fetch(`${r}/appointments`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!o.ok)throw new Error("Failed to create appointment.");return o.json()},k=async t=>{try{const o=await fetch(`${r}/customers/${t}/all-appointments`);if(!o.ok)throw new Error("Failed to fetch all appointment history.");return await o.json()}catch(o){return console.error("Error fetching all appointment history:",o),[]}},C=async(t,o)=>{const e=await fetch(`${r}/customers/${t}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!e.ok)throw new Error("Failed to update customer");return e.json()};export{d as a,l as b,f as c,m as d,E as e,u as f,$ as g,w as h,c as i,k as j,i as k,a as l,p as m,h as n,j as o,C as p,y as r,g as u};
